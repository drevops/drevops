version: 2
jobs:
  # Code style checking.
  # Fail fast if code style is incorrect.
  code_style:
    docker:
      - image: circleci/php:7.0-cli

    steps:
      - checkout

      - restore_cache:
          keys:
            - composer-dependencies1-{{ checksum "composer.json" }}

      - run: composer install

      - save_cache:
          paths:
            - ~/project/vendor
            - ~/project/node_modules
          key: composer-dependencies1-{{ checksum "composer.json" }}

      - run: composer cs

  # Download DB.
  download_db:
    machine: true

    steps:
      - restore_cache:
          keys:
           - data-{{ .Branch }}

      # Download DB dump from public URL to test Drupal-dev project.
      # Remove the line below in your project.
      - run: if [ ! -f .data/db.dist.sql ] ; then mkdir .data && curl -L https://goo.gl/WFtJbT -o .data/db.dist.sql; fi
      # [META] Uncomment the line below to download DB dump from FTP, using
      # variables set in Circle CI UI.
      # - run: if [ ! -f $BUILD_DIR/.data/db.dist.sql ] ; then mkdir $BUILD_DIR/.data && curl -u $FTP_USER:$FTP_PASS "ftp://$FTP_HOST/db_d7.dist.sql" -o $BUILD_DIR/.data/db.dist.sql; fi

      - save_cache:
          paths:
            - ~/project/.data
          key: data-{{ .Branch }}

  # Build and test the whole project.
  build_and_test:
    docker:
      - image: circleci/php:7.0-cli

    steps:
      - checkout

      - restore_cache:
          keys:
           - composer-dependencies1-{{ checksum "composer.json" }}
           - data-{{ .Branch }}

      - run: pwd
      - run: ls -al
      - run: composer cs

workflows:
  version: 2

  cs_and_build_and_test:
    jobs:
      - code_style
      - download_db
      - build_and_test:
          requires:
            - code_style
            - download_db
