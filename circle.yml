machine:
  timezone:
    Australia/Sydney
  environment:
    BUILD_DIR: $HOME/$CIRCLE_PROJECT_REPONAME
    DB_NAME: "circle_test"
    DB_USER: "ubuntu"
    DB_PASS: ""
    DB_HOST: "127.0.0.1"
    # Server configuration.
    DOCROOT_DIR: $BUILD_DIR/docroot
    PUBLIC_FILES_DIR: $DOCROOT_DIR/sites/default/files
    SERVER: local.MYSITEURL
    WEB_URL: http://local.MYSITEURL
    WEB_USER: $(whoami)
    WEB_GROUP: www-data
    PHP_EXECUTABLE: $(which php)
    # Custom configuration.
    BEHAT_SCREENSHOT_DIR: $CIRCLE_ARTIFACTS/behat
    # Add composer bin to path.
    PATH: "$HOME/.config/composer/vendor/bin:$PATH"
  hosts:
    local.MYSITEURL: 127.0.0.1

dependencies:
  cache_directories:
    - ~/.composer/cache
    # Cache DB dumps directory.
    - .data
  pre:
    # Download DB dump from FTP.
    # This uses variables set in Circle CI UI.
    - if [ ! -f $BUILD_DIR/.data/db.dist.sql ] ; then mkdir $BUILD_DIR/.data && curl -u $FTP_USER:$FTP_PASS "ftp://$FTP_HOST/db_d7.dist.sql" -o $BUILD_DIR/.data/db.dist.sql; fi
    - rm /opt/circleci/php/$(phpenv global)/etc/conf.d/xdebug.ini
    - echo "date.timezone = Australia/Sydney" >> /opt/circleci/php/$(phpenv global)/etc/php.ini
    # Increase PHP memory size for running tests.
    - echo "memory_limit = -1" > /opt/circleci/php/$(phpenv global)/etc/conf.d/memory.ini
    - php -i
    # Disable sendmail binary to suppress any mailouts.
    - echo 'sendmail_path = /bin/true' >> /opt/circleci/php/$(phpenv version-name)/etc/conf.d/circle.ini
    # Add apache config.
    - |
      echo "
      <VirtualHost *:80>
        UseCanonicalName Off
        DocumentRoot %DOCROOT_DIR%
        ServerName %SERVER%
        <Directory %DOCROOT_DIR%>
          Options FollowSymLinks
          AllowOverride All
          RewriteEngine On
          RewriteBase /
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule %DOCROOT_DIR%/(.*)$ index.php/?q=$1 [L,QSA]
          Require all granted
        </Directory>
      </VirtualHost>" > apache-vhost.conf
    - sudo cp apache-vhost.conf /etc/apache2/sites-available/000-default.conf
    - sudo sed -e "s?%DOCROOT_DIR%?$DOCROOT_DIR?g" --in-place /etc/apache2/sites-available/000-default.conf
    - sudo sed -e "s?%SERVER%?$SERVER?g" --in-place /etc/apache2/sites-available/000-default.conf
    - sudo a2enmod rewrite && sudo a2enmod proxy && sudo a2enmod proxy_http
    - sudo unlink /usr/lib/apache2/modules/libphp5.so
    - sudo ln -s /opt/circleci/php/$(phpenv global)/usr/lib/apache2/modules/libphp5.so /usr/lib/apache2/modules/libphp5.so
    - sudo service apache2 stop && sudo service apache2 start
    - echo "<?php phpinfo();" > $DOCROOT_DIR/info.php && curl -k $WEB_URL/info.php && rm $DOCROOT_DIR/info.php;
    # Ensure Drupal/Apache can write to public dir.
    - sudo mkdir -p $PUBLIC_FILES_DIR && sudo chmod -R 777 $PUBLIC_FILES_DIR && sudo chown -R $WEB_USER:$WEB_GROUP $PUBLIC_FILES_DIR
    # Make Chrome run with additional flags to resolve content scaling issues.
    - "echo '#! /bin/bash' | sudo tee /opt/google/chrome/google-chrome-hack"
    - "echo '/opt/google/chrome/google-chrome --high-dpi-support=1 --force-device-scale-factor=1' | sudo tee --append /opt/google/chrome/google-chrome-hack"
    - "sudo chmod 755 /opt/google/chrome/google-chrome-hack"
    - "sudo mv /usr/bin/google-chrome-stable /usr/bin/google-chrome-stable.backup"
    - "cd /usr/bin && sudo ln -s /opt/google/chrome/google-chrome-hack google-chrome-stable"
    # Install Selenium.
    - curl http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar > selenium-server-standalone.jar
    - curl http://chromedriver.storage.googleapis.com/2.25/chromedriver_linux64.zip | gzip -dc > chromedriver
    - chmod +x chromedriver
    - 'java -jar selenium-server-standalone.jar > /dev/null -Dwebdriver.chrome.driver=chromedriver 2>&1':
          background: true

  override:
    - composer global require --no-interaction drush/drush
    - mkdir -p $HOME/.drush && echo "<?php \$aliases['$SERVER'] = ['uri' => '$SERVER', 'root' => '$DOCROOT_DIR'];" > $HOME/.drush/$SERVER.aliases.drushrc.php && drush sa
    - cd $HOME/$CIRCLE_PROJECT_REPONAME && composer build
    # Check that Drupal can be bootstrapped after updates.
    - drush status --root=$DOCROOT_DIR | grep -aqoi "Drupal bootstrap\s*:\s*Successful"

test:
  override:
    - composer cs
    - composer test

deployment:
  # Deploy master, develop, ci, release and feature branches.
  remote:
    branch: /master|develop|ci|(release\/)?[0-9]+(\.[0-9]+)+(-rc[0-9]+)?|(hotfix\/)?[0-9]+(\.[0-9]+)+(-rc[0-9]+)?|feature\/[a-zA-z0-9\-]+/
    commands:
      - echo "Running deployment command"
