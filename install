#!/usr/bin/env bash
##
# Drupal-Dev installer.
#
# Usage:
# curl -L https://raw.githubusercontent.com/integratedexperts/drupal-dev/8.x/install | bash
# or
# curl -L https://raw.githubusercontent.com/integratedexperts/drupal-dev/8.x/install | bash -s -- /path/to/destination/directory

CUR_DIR=$(pwd)
# Destination directory, that can be overridden with the first argument to this script.
DST_DIR="${DST_DIR:-${CUR_DIR}}"
DST_DIR=${1:-${DST_DIR}}

# Load variables from .env and .env.local files, if they exist.
[ -f "${DST_DIR}/.env" ] && export "$(grep -v '^#' "${DST_DIR}/.env" | xargs)" && [ -f "${DST_DIR}/.env.local" ] && export "$(grep -v '^#' "${DST_DIR}/.env.local" | xargs)"

# Project name.
PROJECT=${PROJECT:-}
# Drupal version to download files for.
DRUPAL_VERSION=${DRUPAL_VERSION:-8}
# Flag to run this install in interactive mode with user input.
DRUPALDEV_IS_INTERACTIVE=${DRUPALDEV_IS_INTERACTIVE:-0}
# Flag to allow override existing committed files.
DRUPALDEV_ALLOW_OVERRIDE=${DRUPALDEV_ALLOW_OVERRIDE:-0}
# Flag to allow writing downloaded files into local ignore for current repository.
DRUPALDEV_ALLOW_USE_LOCAL_IGNORE=${DRUPALDEV_ALLOW_USE_LOCAL_IGNORE:-1}
# Path to local Drupal-Dev repository. If not provided - remote will be used.
DRUPALDEV_LOCAL_REPO=${DRUPALDEV_LOCAL_REPO:-}
# Organisation name to download the files from.
DRUPALDEV_GH_ORG=${DRUPALDEV_GH_ORG:-integratedexperts}
# Project name to download the files from.
DRUPALDEV_GH_PROJECT=${DRUPALDEV_GH_PROJECT:-drupal-dev}
# Optional commit to download. If not provided, latest release will be downloaded.
DRUPALDEV_GH_COMMIT=${DRUPALDEV_GH_COMMIT:-}
# Temporary directory to download and expand files to.
TMP_DIR=$(mktemp -d)

install(){
  if [ "${DRUPALDEV_LOCAL_REPO}" != "" ]; then
    echo "==> Downloading Drupal-Dev from local repository ${DRUPALDEV_LOCAL_REPO}"
    download_local "${DRUPALDEV_LOCAL_REPO}"
  else
    echo "==> Downloading Drupal-Dev from remote repository https://github.com/${DRUPALDEV_GH_ORG}/${DRUPALDEV_GH_PROJECT}"
    download_remote "${DRUPALDEV_GH_ORG}" "${DRUPALDEV_GH_PROJECT}" "${DRUPALDEV_GH_COMMIT}"
  fi

  if [ "${DRUPALDEV_IS_INTERACTIVE}" != "" ]; then
    echo "==> Running in interactive mode"
    gather_answers 1
  else
    gather_answers
  fi

  rename_stub "${TMP_DIR}"

  copy_files "${DST_DIR}" "${DRUPALDEV_ALLOW_OVERRIDE}" "${DRUPALDEV_ALLOW_USE_LOCAL_IGNORE}"

  echo "==> Finished installing Drupal-Dev (Drupal ${DRUPAL_VERSION}) into ${DST_DIR} directory"
}

# Check if specified file is tracked by git.
git_file_is_tracked(){
  if [ -d ./.git/ ]; then
    git ls-files --error-unmatch "${1}" &>/dev/null
    echo $?
  else
    echo 1
  fi
}

# Check if specified file is ignored by git.
git_file_is_ignored(){
  if [ -d ./.git/ ]; then
    git check-ignore "${1}"
    echo $?
  else
    echo 1
  fi
}

# Add specified file to local git ignore (not .gitgnore).
git_add_to_local_ignore(){
  if [ -d ./.git/ ]; then
    if ! grep -Fxq "${1}" ./.git/info/exclude; then
      echo "${1}" >> ./.git/info/exclude
      echo "==>   Added file $1 to local git ignore"
    fi
  fi
}

install "$@"
