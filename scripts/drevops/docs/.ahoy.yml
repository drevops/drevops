---
ahoyapi: v2

commands:
  build:
    usage: Build site
    cmd: |
      ahoy down
      (docker network prune -f > /dev/null && docker network inspect amazeeio-network > /dev/null || docker network create amazeeio-network)
      ahoy update
      ahoy up -- --build --force-recreate
      ahoy info

  test:
    usage: Test site
    cmd: |
      cd ../../.. && ./scripts/drevops/tests/lint-spelling.sh && cd - \
      && docker compose run linkchecker http://mkdocs:8000 "$@"

  publish:
    usage: Deploy site
    cmd: docker compose exec mkdocs sh -c "/app/.utils/release.sh $*"

  update:
    usage: Update docs
    cmd: ./.utils/update-docs.sh

  info:
    usage: Print information about this project.
    cmd: |
      ahoy line "Site local URL: " ${DREVOPS_LOCALDEV_URL}

  version:
    usage: MkDocs version
    cmd: docker compose run mkdocs --version

  up:
    usage: Build and start Docker containers.
    cmd: |
      docker compose up -d "$@" && \
      docker compose exec mkdocs sh -c "dockerize -wait tcp://mkdocs:8000 -timeout 1m"
      if docker compose logs | grep -q "\[Error\]"; then docker compose logs; exit 1; fi

  down:
    usage: Stop Docker containers and remove container, images, volumes and networks.
    cmd: "if [ -f \"docker-compose.yml\" ]; then docker compose down --volumes; fi"

  start:
    usage: Start existing Docker containers.
    cmd: docker compose start "$@"

  stop:
    usage: Stop running Docker containers.
    cmd: docker compose stop "$@"

  cli:
    usage: Start a shell or run a command inside the CLI service container.
    cmd: if \[ "${#}" -ne 0 \]; then docker compose exec -T mkdocs sh -c "$*"; else docker compose exec mkdocs sh; fi

  line:
    cmd: printf "$(tput -Txterm setaf 2)${1}$(tput -Txterm sgr0)${2}\n"
    hide: true

entrypoint:
  - bash
  - "-c"
  - "-e"
  - |
    export DREVOPS_LOCALDEV_URL=http://drevops-docs.docker.amazee.io:8000
    bash -e -c "$0" "$@"
  - '{{cmd}}'
  - '{{name}}'
